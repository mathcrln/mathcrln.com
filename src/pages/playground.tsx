import Head from 'next/head';
import Container from '@/layout/Container';
import { IProjectCard } from '@/components/projects/types/project.type';
import { gql } from '@apollo/client';
import client from '@/lib/apollo-client';
import FeaturedCard from '@/components/projects/FeaturedCard';
import ProjectGrid from '@/components/projects/ProjectGrid';

export default function Playground({
	featured,
	allProjects,
}: {
	featured: IProjectCard | null;
	allProjects: IProjectCard[];
}): JSX.Element {
	return (
		<div>
			<Head>
				<title>Playground | Mathieu Céraline</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Container>
				<div className='text-center pt-4 mt-5'>
					<h1 className='text-3xl md:text-5xl font-semibold'>Playground</h1>
					<p className='text-lg md:text-xl font-extralight my-4 text-[#CCCCCC]'>
						I like to play, to experiment and discover new things and technologies. <br />
						If you’re curious, here are a few project I worked on recently.
					</p>
				</div>
				<main className='my-20'>
					{featured && <FeaturedCard featured={featured} />}
					{allProjects && <ProjectGrid projects={allProjects} />}
				</main>
			</Container>
		</div>
	);
}

export async function getStaticProps(): Promise<any> {
	const featured = await client.query({
		query: gql`
			query Projects {
				projects(sort: "published_at:desc", limit: 1, start: 0) {
					name
					id
					content
					description
					cover {
						height
						width
						url
						alternativeText
					}
					skills {
						name
						icon {
							url
							height
							width
						}
					}
					slug
					tags {
						name
					}
				}
			}
		`,
	});

	const allProjects = await client.query({
		query: gql`
			query Projects {
				projects(sort: "published_at:desc", limit: 6, start: 1) {
					name
					id
					content
					description
					cover {
						height
						width
						url
						alternativeText
					}
					skills {
						name
						icon {
							url
							height
							width
						}
					}
					slug
					tags {
						name
					}
				}
			}
		`,
	});

	return {
		props: {
			allProjects: allProjects.data.projects,
			featured: featured.data.projects[0] || null,
			revalidate: 10,
		},
	};
}
